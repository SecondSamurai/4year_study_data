Доступ к файлам.
	Язык С кроме стандартного ввода данных с клавиатуры 
и вывода результатов на экран предоставляет также возможность
обмена при операциях ввода/вывода с внешними устройствами,в 
том числе,с файлами на диске.
	В С не предусмотрены никакие предопределенные 
структуры файлов,все файлы рассматриваются как последователь-
ности,потоки байтов.
	Для файла определен маркер(указательчтентя/записи).
Он определяет текущую позицию,к которой осуществляется доступ.
	С началом любой программы автоматически открывается 
некоторые стандартные потоки: стандартный ввод(stdin) и стан-
дартный вывод(stdout).По умолчанию они связаны с клавиатурой и
экраном терминала соответственно.Поэтому в тех функциях ввода/
вывода, которые использовались до сих пор (scanf,printf),не ука-
зывалось,из какого потока берутся или куда будут помещаться 
данные:это известно по умолчанию.
	Для применения в своих программах потоков ввода/
выводы используются функции ввода/вывода верхнего уровня.
	Доступ к потоку осуществляется с помощью указателя .
Указатель на файл описывается следующим образом:
	FILE *fp;
	Тип FILE - это стуктура,определенная в в <stdio.h> c 
помощью typedef , которая содержит информацию о файле, такую 
как место размещения буфера, текущая позиция символа в буфере,
происходит ли чтение из файла или запись в него и тому подобное.
Описанный указатель можно связать с конкретным файлом в момент 
открытия данного файла c помощью функции 

	fopen("путь к файлу","тип доступа").

Данная функция возвращает указатель на файл или NULL в случае
ошибки.Например,

	fp=fopen("primer1.cpp","w")

В данном случае fp-это указатель на файл primer1.cpp который 
открыт для записи. Функция fopen берет внешнее представление 
файла - его физическое имя - (primer1.cpp) и ставит ему в 
соответствие внутреннее логическое имя(fp),которое и будет 
использоваться в программе.
	В качестве типа доступа могут быть указаны следующие 
параметры:
         r       Открыть только для чтения

         w       Создать для записи

         a       Добавление; открыть для записи в ко-
                 нец файла или  создать  для  записи,
                 если файл не существует

         r+      Открыть  существующий файл для изме-
                 нения (запись и чтение)

         w+      Создать новый файл для изменения

         a+      Открыть для добавления; открыть (или
                 создать,  если  файл  не существует)
                 для добавления в конец файла.

(Более подробно данную функцию можно посмотреть в приложении.)
	По оканчанию работы с файлом он должен быть закрыт 
функцией fclose(уквазатель_файла).
	Для чтения/записи данных в файл имеются функции , 
аналогичные уже известным функциям ввода/вывода

fprintf(),fscsnf(),fputs(),fgets(),fgetc(),fputc(),getc(),.

	Прототипы всех файловых функций ,а также необходимые 
константы находятся в файле <stdio.h>.Более подробную информацию 
о приведенных функциях можно посмотреть в приложении в конце файла.


Все приведенные выше функции обрабатывали файл последовательно - 
симсол за символом.Язык С предоставляет возможность работать с 
файлом,как с массивом,т.е. непосредственно достигать любого опре-
деленного байта.Для позиционирования файла служит функция 

	sfeek(указатель на файл,смещение от нач.файла,нач.точка)
второй аргумент имеет тип long и показывает,насколько далеко 
(в байтах) следует продвинуться от начальной точки. Третий аргумент 
является кодом,определяющим положение начальной точки в файле.
Установлены следующие значения кода:
         0  начало файла
         1  текущее положение указателя файла
         2  конец файла
в случае успеха данная функция возвращает 0,в случае ошибки возвращается -1.

	При работе с файлами структур удобно использовать фукции
fread()/fwrite(),которые имеют следующий формат

	fread(ptr,size,N,fp);
Из файла fpсчитываются N элементов размером size байт каждый в 
область памяти ptr.В случае успеха возвращается число считанных
байтов.При ошибке или конце файла - EOF.
	Аналогичным образом действует функция 
	fwrite(ptr,size,N,fp);
В файл fp записываются N элементов по size байт каждый,расположенные в 
области памяти,начиная с адреса ptr.
 


Приложение. Справочник по функциям работы с файлами.

     -----------------------------------------------------------------
     fscanf
     -----------------------------------------------------------------

     Назначение        Выполняет форматированный ввод из потока.

     Синтаксис         #include<stdio.h>
                       int fscanf(FILE *stream, const char *format,
                                            [,adr ,...]);

     Прототип в        stdio.h

     Замечания         fscanf сканирует символы с консоли.  Затем пре-
                       образует считанные  символы  в  соответствии  с
                       форматом, заданным в строке формата, определяе-
                       мой указателем  format.  Затем  преобразованные
                       данные размещаются  по адресу (адресам),  пере-
                       данным в качестве параметров функции fscanf, и,
                       наконец,  выводит  вводимые символы на консоль.
                       Число задаваемых в строке форматов должно  сов-
                       падать с количеством адресов,  переданных функ-
                       ции.

                       Описание используемых форматов приведены в опи-
                       сании функции scanf.

                       fscanf может  прекратить  сканирование символов
                       до того как достигнет конца файла при обнаруже-
                       ние белого поля (пробел, табуляция и т. п.) или
                       вообще завершиться по целому ряду причин. Смот-
                       ри  описание функции scanf для более детального
                       ознакомления.

     Возвращаемое      fscanf  возвращает  количество  отсканированных
     значение          символов, успешно преобразованных и размещенных
                       по соответствующим адресам.

                       При достижении конца файла fscanf  вернет  EOF.
                       Если  ни  одного  значения  не  было  размещено
                       fscanf вернет 0 .


     Смотри также      atof,  cscanf,  fprintf, printf, scanf, sscanf,
                       vscanf, vsscanf



     -----------------------------------------------------------------
     fseek
     -----------------------------------------------------------------

     Назначение        Перемещает указатель файла.

     Синтаксис         #include<stdio.h>
                       int fseek(FILE *stream,long int offset,
                                            int fromwhere);

     Прототип  в        stdio.h

     Oписание          fseek устанавливает указатель файла, связанного
                       со stream, на новую позицию, которая отстоит от
                       места в файле,  заданного в fromwhere, на коли-
                       чество байт, указанных в offset.

                       fromwhere должно быть одной из  величин:  0,  1
                       или  2,  которые  представляют  три  символьные
                       константы (определены в stdio.h):

                          fromwhere         Размещение в файле
                          ---------         ------------------
                          SEEK_SET (0)  начало файла
                          SEEK_CUR (1)  текущее положение указателя
                                        файла
                          SEEK_END (2)  конец файла

                       fseek теряет любой символ,  возвращенный в файл
                       с использованием ungetc.

                       После fseek следующая операция по обмену с фай-
                       лом может быть как вводом, так и выводом.

     Возвращаемое      fseek возвращает 0, если указатель успешно  пе-
     значение          ремещен, и ненулевое значение при ошибке.

     Переносимость     fseek доступна в системах UNIX  и  cовместима с
                       ANSI Си.

     Смотри также      fgetpos,  fopen, fsetpos, ftell, lseek, rewind,
                       setbuf, tell

     Пример
                       #include<stdio.h>

                       /* возвращает число байтов в потоке */

                       long filesize(FILE *stream)
                       {
                         long curpos,length;
                         curpos = ftell(stream);
                         fseek(stream,OL,SEEK_END);
                         length = ftell(stream);
                         fseek(stream,curpos,SEEK_SET);
                         return(length);
                       }

                       main()
                       {
                         FILE *stream;
                         stream = fopen("MYFILE.TXT", "r");
                         printf("размер файла MYFILE.TXT - %ld"
                              " байт\n"), filesize(stream);
                       }


                       Результат выполнения программы

                       размер файла MYFILE.TXT - 15 байт



     -----------------------------------------------------------------
     fsetpos
     -----------------------------------------------------------------

     Назначение        Позиционирует указатель файла в потоке.

     Синтаксис         #include<stdio.h>
                       int fsetpos(FILE *stream, const fpos_t *pos);

     Прототип в        stdio.h

     Замечания         fsetpos устанавливает указатель файла stream, в
                       новое положение.  Новое положение указателя по-
                       лучено  в  результате  предварительного  вызова
                       fgetpos.  fsetpos  сбрасывает  индикатор  конца
                       файла,  на который указывает stream, и отменяет
                       результаты  обработки  функции ungetc для этого
                       файла. Следующей после вызова fsetpos операцией
                       над файлом может быть ввод или вывод.

                       Тип fpos_t  описан  в  stdio.h как

                            typedef long fpos_t;

     Возвращаемое      При успешном выполнении  fsetpos  возвращает 0.
     значение          При ошибке данная  функция возвращает ненулевое
                       значение.

     Переносимость     fsetpos cовместима с ANSI Си.

     Смотри также      fgetpos, fseek, ftell



     -----------------------------------------------------------------
     fstat
     -----------------------------------------------------------------

     Назначение        Дает информацию об открытом файле.

     Синтаксис         #include<sys\stat.h>
                       int fstat(int handle, struct stat *buff)

     Прототип в        sys\stat.h

     Замечания         fstat заполняет структуру типа stat информацией
                       об открытом файле или каталоге.

                       buff указывает  на структуру типа stat (опреде-
                       лена в sys\stat.h).  Данная структура  содержит
                       следующие поля:

                          st_mode   Маска, содержащая информацию о
                                    режиме открытия файла

                          st_dev    Номер драйвера диска, содержащего
                                    файл, или номер обработчика, если
                                    файл на устройстве.

                          st_rdev   Совпадает с  st_dev

                          st_nlink  Целая константа 1

                          st_size   Размер открытого файла в байтах

                          st_atime  Время последней модификации файла

                          st_mtime  Совпадает с st_atime

                          st_ctime  Совпадает с st_atime

                       stat структра содержит еще три поля, не указан-
                       ные  здесь,  они содержат значения,  которые не
                       имеют смысла для MS-DOS.

                       Маска, содержащая информацию о  режиме открытия
                       файлов, включает следующие биты.

                       Устанавливается один из двух бит:

                           S_IFCHR      Если handle ссылается на
                                        устройство

                           S_IFREG      Если handle ссылается на
                                        обычный файл

                       Устанавливается один или два бита:

                           S_IWRITE     Если  у пользователя есть дос-
                                        туп для записи

                           S_IREAD      Если у пользователя есть  дос-
                                        туп для чтения

                       Маска также содержит биты режима доступа к фай-
                       лу.

     Возвращаемое      fstat возвращает 0 при успешном  получении  ин-
     значение          формации об открытии,  при ошибке возвращает -1
                       и устанавливает errno в

                           EBADF   Неверный дескриптор файла

     Смотри также      acces, chmod, stat



     -----------------------------------------------------------------
     ftell
     -----------------------------------------------------------------

     Назначение        Возвращает текущее положение указателя файла.

     Синтаксис         #include<stdio.h>
                       long ftell(FILE *stream)

     Прототип в        stdio.h

     Замечания         ftell возвращает текущее  положение  (смещение)
                       указателя  файла stream.  Смещение измеряется в
                       байтах, считая от начала файла.

                       Значение, возвращенное функцией  ftell,  обычно
                       используется для последующего вызова fseek.

     Возвращаемое      fteel  возвращает  текущую  позицию   указателя
     значение          файла или   -1L при ошибке и присваивает  errno
                       положительное значение.

     Переносимость     fteel  доступна  в системах UNIX и cовместима с
                       ANSI Си.

     Смотри также      fgetpos, fseek, fsetpos, lseek, rewind, tell

     Пример            Смотри fseek

     -----------------------------------------------------------------
     fwrite
     -----------------------------------------------------------------

     Назначение        Запись данных в поток.

     Синтаксис         #include<stdio.h>
                       int fwrite(void *ptr, size_t size,
                                  size_t nitems, FILE *stream)

     Прототип в        stdio.h

     Замечания         fwrite добавляет nitems элементов данных,  каж-
                       дый из которых имеет длину в size байт, к пото-
                       ку вывода stream. ptr - адрес выводимых данных.

                       Общее число прочитанных байт  равно  (nitems  *
                       size).

                       ptr в  описании  является  указателем  на любой
                       объект.

     Возвращаемое      При  успешном окончании fwrite возвращает число
     значение          элементов (не байт), в действительности  прочи-
                       танных.

                       fwrite возвращает короткий счетчик при ошибке.

     Переносимость     fwrite доступна в системах UNIX и cовместима с
                       ANSI Си.

     Смотри также      fopen, fread


     -----------------------------------------------------------------
     fclose
     -----------------------------------------------------------------

     Назначение        Закрывает поток.

     Синтаксис         #include<stdio.h>
                       int fclose(FILE *stream);

     Прототип в        stdio.h

     Замечания         fclose закрывает  поток stream; перед закрытием
                       все буферы,  связанные со  stream,   очищаются.
                       Системно  распределенные  буферы освобождаются.
                       Буферы, назначенные функциями setbug и setvbuf,
                       автоматически не освобождаются.

     Возвращаемое      fclose  возвращает  0  при  успешном завершении
     значение          или возвращает EOF, если обнаружена любая ошиб-
                       ка.

     Переносимость     fclose доступна в системах UNIX.

     Смотри также      close, fcloseall, fdopen, flush, flushall,
                       fopen, freopen

     Пример            Смотри fopen



     -----------------------------------------------------------------
     fcloseall
     -----------------------------------------------------------------

     Назначение        Закрывает открытые потоки.

     Синтаксис         int fcloseall(void);

     Прототип в        stdio.h

     Замечания         fcloseall закрывает все открытые потоки, за ис-
                       ключением stdin, stdout, stdprn и stdaux.

                       fcloseall возвращает общее число закрытых пото-
                       ков или возвращает EOF,  если обнаружена  любая
                       ошибка.

     Переносимость     fcloseall доступна в системах UNIX.

     Смотри также      fclose, fdopen, flushall, fopen, freopen





     -----------------------------------------------------------------
     feof
     -----------------------------------------------------------------

     Назначение        Проверка на достижение конца файла в потоке.

     Синтаксис         #include<stdio.h>
                       int feof(FILE *stream);

     Прототип в        stdio.h

     Замечания         feof - макрофункция,  проверяющая для заданного
                       потока индикатор конца файла.  Как только  этот
                       индикатор  установлен,  операции  чтения  файла
                       возвращают значения  этого  индикатора  до  тех
                       пор,  пока  не будет вызвана rewind или файл не
                       будет закрыт.

                       Индикатор конца файла устанавливается при  каж-
                       дой операции ввода.

     Возвращаемое      feof   возвращает   ненулевое   значение,  если
     значение          обнаружен индикатор конца файла во время выпол-
                       нения последней операции ввода в потоке,  или 0
                       - если не был обнаружен конец файла.

     Переносимость     feof доступна в системах UNIX,  и совместима  с
                       ANSI Cи.

     Смотри также      clearerr, eof, ferror, perror



     -----------------------------------------------------------------
     ferror
     -----------------------------------------------------------------

     Назначение        Обнаруживает ошибки в потоке.

     Синтаксис         #include<stdio.h>
                       int ferror(FILE *stream);

     Прототип в        stdio.h

     Замечания         ferror -  макрофункция,   проверяющая  поток на
                       ошибку чтения или записи. Если установлен инди-
                       катор ошибки потока stream,  то он остается та-
                       ким до вызова clearerr или rewind,  или до зак-
                       рытия потока.

     Возвращаемое      ferror возвращает  ненулевое  значение,  если в
     значение          потоке stream обнаружена ошибка.

     Переносимость     ferror доступна в системах UNIX, и совместима с
                       ANSI Cи.

     Смотри также      clearerr, eof, feof, fopen, gets,  perror



     -----------------------------------------------------------------
     fflush
     -----------------------------------------------------------------

     Назначение        Очищает поток.

     Синтаксис         #include<stdio.h>
                       int fflush(FILE *stream);

     Прототип в        stdio.h

     Замечания         Если  поток  stream  открыт для вывода - fflush
                       записывает содержимое буфера вывода в соответс-
                       твующий файл.

                       Если поток  stream  открыт  для  ввода - fflush
                       очищает буфер.

                       После выполнения fflush поток  остается  откры-
                       тым.  Данная  функция не применяется при безбу-
                       ферном вводе- выводе.

     Возвращаемое      fflush  возвращает  0 при  успешном завершении,
     значение          или - EOF если обнаружена ошибка.

     Переносимость     fflush доступна в системах UNIX, и совместима с
                       ANSI Cи.

     Смотри также      fclose, flushall, setbuf, setvbuf



     -----------------------------------------------------------------
     fgetc
     -----------------------------------------------------------------

     Назначение        Получает символ из потока.

     Синтаксис         #include<stdio.h>
                       int fgetc(FILE *stream);

     Прототип в        stdio.h

     Замечания         fgetc возвращает следующий символ из потока.

     Возвращаемое      В  случае  успешного  выполнения функция  fgetc
     значение          возвращает прочитанный символ после  преобразо-
                       вания  его  в целое без знака.  При обнаружении
                       конца файла или ошибке - возвращает EOF.

     Переносимость     fgetc доступна в системах UNIX и  совместима  с
                       ANSI Си.

     Смотри также      fgetchar, fputs, getc, getch, getchar, getche,
                       ungetc, ungetch



     -----------------------------------------------------------------
     fgetchar
     -----------------------------------------------------------------

     Назначение        Получает символ из потока stdin.

     Синтаксис         int fgetchar(void);

     Прототип в        stdio.h

     Замечания         fgetchar  возвращает следующий символ из потока
                       stdin. Она определена как   fgetc(stdin).

     Возвращаемое      В случае успешного выполнения функция  fgetchar
     значение          возвращает прочитанный символ после  преобразо-
                       вания  его  в целое без знака.  При обнаружении
                       конца файла или ошибке - возвращает EOF.

     Переносимость     fgetchar доступна в системах UNIX.

     Смотри также      fgetc, fputchar, getchar



     ----------------------------------------------------------------
     fgetpos
     ----------------------------------------------------------------

     Назначение        Возвращает текущую позицию указателя файла.

     Синтаксис         #include<stdio.h>
                       int fgetpos(FILE *stream, fpos_t *pos);

     Прототип в        stdio.h

     Замечания         fgetpos сохраняет в ячейках,  адресованных pos,
                       позицию  указателя  файла,  ассоциированного со
                       stream.

                       Тип fpos_t  описан  в  stdio.h как

                          typedef long fpos_t;

     Возвращаемое      В случае успеха функция  fgetpos  возвращает 0.
     значение          При  ошибке  эта  функция  возвращает ненулевое
                       значение.

     Переносимость     fgetpos совместима с ANSI Cи.

     Смотри также      fseek, fsetpos, ftell, tell



     -----------------------------------------------------------------
     fgets
     -----------------------------------------------------------------

     Назначение        Получает строку из потока.

     Синтаксис         #include<stdio.h>
                       char *fgets(char *string, int n, FILE *stream);

     Прототип в        stdio.h

     Замечания         fgets читает символы из потока в строку string.
                       Функция заканчивает  чтение,  когда  она   либо
                       прочтет n-1 символ,  либо встретит символ новой
                       строки.  Последним   символом,   записанным   в
                       string, будет нулевой символ. fgets не размеща-
                       ет символ новой строки в string.

     Возвращаемое      fgets при успешном выполнении возвращает строку
     значение          string, переданнную как аргумент, а при обнару-
                       жении ошибки или конца файла - NULL.

     Переносимость     fgets доступна в системах UNIX и  совместима  с
                       ANSI  Си.  Эта функция определенна Керниганом и
                       Ритчи.

     Смотри также      cgetc, fputs, gets



     -----------------------------------------------------------------
     filelength
     -----------------------------------------------------------------

     Назначение        Получает размер файла в байтах.

     Синтаксис         #include<io.h>
                       long filelength(int handle);

     Прототип в        io.h

     Замечания         filelength  возвращает  длину (в байтах) файла,
                       связанного с дескриптором handle.

     Возвращаемое      При успешном выполнении  filelength  возвращает
     значение          число  типа  long,  длину  файла  в байтах. При
                       ошибке функция возвращает значение -1L, и errno
                       устанавливается в

                            EBADF - неверный номер файла.

     Смотри также      fopen, lseek, open



     -----------------------------------------------------------------
     fopen
     -----------------------------------------------------------------

     Назначение        Открывает поток.

     Синтаксис         #include<stdio.h>
                       FILE *fopen(const char *filename, char *type);

     Прототип в        stdio.h

     Замечания         fopen открывает файл с именем filename и  возв-
                       ращает укзатель, используемый для идентификации
                       потока в последующих операциях.

                       Тип строки type,  используемый при каждом вызо-
                       ве, может принимать одно из следующих значений:

                          r       Открыть только для чтения

                          w       Создать для записи

                          a       Добавление; открыть для записи в ко-
                                  нец файла или  создать  для  записи,
                                  если файл не существует

                          r+      Открыть  существующий файл для изме-
                                  нения (запись и чтение)

                          w+      Создать новый файл для изменения

                          a+      Открыть для добавления; открыть (или
                                  создать,  если  файл  не существует)
                                  для добавления в конец файла.

                       Для задания того,  что файл открыт или создан в
                       текстовом режиме, вы можете добавить t к значе-
                       нию type (rt,  w+t, и т.д.); аналогично для за-
                       дания  двоичного  режима вы должны добавить b к
                       значению type (wb,  a+b,  и т.д.).  fopen также
                       допускает  менять  местами  символы b,  t и + в
                       строке режима.  Например, использование rt+ эк-
                       вивалентно r+t.

                       Если t или b в type не заданы - режим определя-
                       ется значением  глобальной  переменной  _fmode.
                       Если _fmode  установлена  в O_BINARY,  то файлы
                       будут открыты в двоичном  режиме.  Если  _fmode
                       установлена  в  O_TEXT  - файлы будут открыты в
                       текстовом режиме.  Эти константы  определены  в
                       файле fcntl. h.

                       Когда файл открыт для изменения - в результиру-
                       ющий поток может быть произведен как  ввод, так
                       и вывод.  Однако вывод не может сразу следовать
                       за вводом без запроса fseek или rewind,  как  и
                       ввод  не  может  сразу следовать за выводом без
                       запроса fseek или rewind,  или  ввода,  который
                       встречает конец файла.

     Возвращаемое      При  успешном   завершении   fopen   возвращает
     значение          указатель на вновь  открытый  поток.  В  случае
                       ошибки - возвращает NULL.

     Переносимость     fopen  доступна  в системах UNIX и совместима с
                       ANSI Си. Она определена Керниганом и Ритчи.

     Смотри также      creat, dup, fclose, fdopen, ferror, _fmode (пе-
                       ременная),   fread,   freopen,   open,  setbuf,
                       setmode.

     Пример
                       #include<stdio.h>

                       main()
                       {
                         FILE *in, *out;

                         if ((in = fopen("\\AUTOEXEC.BAT",
                                        "rt")) == NULL);
                         {
                            fprint(stderr, "Невозможно открыть файл"
                                        "  ввода.\n");
                            return(1);
                         }

                         if ((in = fopen("\\AUTOEXEC.BAК",
                                        "wt")) == NULL);
                         {
                            fprint(stderr, "Невозможно открыть файл"
                                        "  вывода.\n");
                            return(1);
                         }
                         while (!feof(in))
                            fputs(fgetc(in), out);
                         fclose(in);
                         fclose(out);
                       }



     -----------------------------------------------------------------
     fprintf
     -----------------------------------------------------------------

     Назначение        Направляет форматированный вывод в поток.

     Синтаксис         #include<stdio.h>
                       int fprintf(FILE *stream,
                                 const char *format[,аргумент,...]);

     Прототип в        stdio.h

     Замечания         fprintf позволяет использовать переменное число
                       параметров.  Функция выполняет вывод аргументов
                       в поток stream. Формат вывода для каждого аргу-
                       мента задается в строке  формата,  определяемой
                       указателем  format.  Число  задаваемых в строке
                       форматов должно совпадать с количеством аргуме-
                       нетов.

                       Описание используемых форматов приведены в опи-
                       сании функции printf.

     Возвращаемое      fprintf возвращает количество выведенных байт.
     значение

     Переносимость     fprintf доступна в системах UNIX и совместима с
                       ANSI  Си.  Данная  функция описана Керниганом и
                       Ритчи.

     Смотри также      cprintf, fscanf, printf, putc, sprintf

     Пример            Смотри printf


     -----------------------------------------------------------------
     fputc
     -----------------------------------------------------------------

     Назначение        Выводит символ в поток.

     Синтаксис         #include<stdio.h>
                       int fputc(int c, FILE *stream);

     Прототип в        stdio.h

     Замечания         fputc  записывает литеру с в заданный поток.

     Возвращаемое      При успешном выпонении функция возвращает
     значеение         символ  с. При ошибке fputc возвращает EOF.

     Переносимость     fputc  доступна в системах UNIX и совместима
                       с ANSI Си.

     Смотри также      fgetc, putc



     -----------------------------------------------------------------
     fputchar
     -----------------------------------------------------------------

     Назначение        Выводит символ в поток stdout.

     Синтаксис         #include<stdio.h>
                       int fputchar(int c)

     Прототип в        stdio.h

     Замечания         fputchar  записывает литеру  с  в поток stdout.
                       fputchar(c) - это то же самое,  что
                       fputc(c, stdout)

     Возвращаемое      При успешном выполнении функция возвращает
     значение          символ с. При ошибке fputchar возвращает EOF.

     Переносимость     fputchar  доступна в системах UNIX.

     Смотри также      fgetchar, putchar



     -----------------------------------------------------------------
     fputs
     -----------------------------------------------------------------

     Назначение        Посылает строку в поток.

     Синтаксис         #include<stdio.h>
                       int fputs(const char *string, FILE *stream);

     Прототип в        stdio.h

     Замечания         fputs  выводит ограниченную нулем строку string
                       в текущее  текстовое окно,  она не реагирует на
                       символ новой строки (\n) и не выводит ограничи-
                       тель строки (\0).

     Возвращаемое      fputs   при   успешном   выполнении  возвращает
     значение          указатель на  последний  выведенный  символ,  в
                       противном  случае  функция  возвращает значение
                       EOF.

     Переносимость     fputs доступна в системах UNIX и  совместима  с
                       ANSI  Си.  Данная  функция описана Керниганом и
                       Ритчи.

     Смотри также      fgets, gets, puts



     -----------------------------------------------------------------
     fread
     -----------------------------------------------------------------

     Назначение        Читает данные из потока.

     Синтаксис         #include<stdio.h>
                       size_t fread(void *ptr, size_t size,
                                    size_t nitems, FILE *stream);

     Прототип в        stdio.h

     Замечания         fread читает nitems элементов  данных,   каждый
                       длиной в  size байт из входного потока stream в
                       блок, указанный ptr.

                       Общее число прочитанных байт  равно  (nitems  *
                       size).

     Возвращаемое      При  успешном  окончании fread возвращает число
     значение          элементов    (не   байт),  в   действительности
                       прочитанных. fread возвращает число элементов в
                       коротком блоке (возможно,  0) при  конце  файла
                       или ошибке.

     Переносимость     fread  доступна во всех системах UNIX и совмес-
                       тима с ANSI Си.

     Смотри также      fopen, fwrite, printf, read




